version: '3.1'

services:
  #servicio de backend para la aplicación sys res 
  app-core:
    container_name: app-core
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: ./SysRes
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - networks_container
    ports:
      - 8080:8080
  #servicio que contiene toda la base de datos para la aplicación sys res 
  db:
    image: 'postgres:latest'
    restart: always
    hostname: db
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_HOST=${DATABASE_HOST}
    ports:
      - 5432:5432
    networks:
      - networks_container
  #servicio que despliegua el gestor de la base de datos 
  pgadmin:
    image: 'dpage/pgadmin4:latest'
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - networks_container
  #servicio que despliegua el frontend de la aplicación sys res 
  angular-app:
    build:
      context: ./sysres_frontend
    ports:
      - "8082:80"
    depends_on:
      - app-core
networks:
  networks_container:
    ipam:
      config:
        - subnet: 172.21.0.0/16
volumes:
    postgres_data:
        driver: local